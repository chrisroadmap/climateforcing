name: Continuous integration
on: [push, pull_request]

# template mostly borrowed from openscm-runner
# https://github.com/openscm/openscm-runner

jobs:
  linting-and-docs:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dev dependencies
      run: |
        pip install --upgrade pip wheel
        pip install -e .[dev]
    - name: Formatting and linters
      run: |
        black --check src tests setup.py --exclude climateforcing/_version.py
        isort --check-only --quiet --recursive src tests setup.py
        pydocstyle src
        flake8 src tests setup.py
        pylint src
#    - name: Build docs
#      # treat warnings as errors (-W)...
#      # ...but not when being nitpicky (-n)
#      run: |
#          sphinx-build -M html docs/source docs/build -qW
#          sphinx-build -M html docs/source docs/build -Eqn -b coverage
#          if [[ -s docs/build/html/python.txt ]]
#          then
#              echo
#              echo \"Error: Documentation missing:\"
#              echo
#              cat docs/build/html/python.txt
#              exit 1
#          fi

  build:
    needs: linting-and-docs

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install test dependencies
      run: |
        pip install --upgrade pip wheel
        pip install -e .[tests]
    - name: Test with pytest
      env:
        MIN_COVERAGE: 90
      run: |
          pytest tests -r a --cov=climateforcing --cov-report=''
          if ! coverage report --fail-under=${MIN_COVERAGE} --show-missing
          then
              echo
              echo "Error: Test coverage has to be at least ${MIN_COVERAGE}"
              exit 1
          fi
